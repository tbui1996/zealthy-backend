// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// OfflineMessageNotificationRepo is an autogenerated mock type for the OfflineMessageNotificationRepo type
type OfflineMessageNotificationRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: userID
func (_m *OfflineMessageNotificationRepo) Create(userID string) (bool, error) {
	ret := _m.Called(userID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Remove provides a mock function with given fields: userID
func (_m *OfflineMessageNotificationRepo) Remove(userID string) error {
	ret := _m.Called(userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateStatus provides a mock function with given fields: userId, status
func (_m *OfflineMessageNotificationRepo) UpdateStatus(userId string, status string) (bool, error) {
	ret := _m.Called(userId, status)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(userId, status)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(userId, status)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
