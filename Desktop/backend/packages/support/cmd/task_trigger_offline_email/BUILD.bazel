load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "task_trigger_offline_email_lib",
    srcs = [
        "connector.go",
        "handler.go",
    ],
    importpath = "github.com/circulohealth/sonar-backend/packages/support/cmd/task_trigger_offline_email",
    visibility = ["//visibility:private"],
    deps = [
        "//packages/common/logging",
        "//packages/common/pretty",
        "//packages/support/pkg/offline_message_notification/constants",
        "//packages/support/pkg/offline_message_notification/iface",
        "//packages/support/pkg/offline_message_notification/input",
        "//packages/support/pkg/offline_message_notification/repo",
        "@com_github_aws_aws_lambda_go//lambda",
        "@com_github_aws_aws_sdk_go//aws",
        "@com_github_aws_aws_sdk_go//aws/session",
        "@com_github_aws_aws_sdk_go//service/sesv2",
        "@com_github_aws_aws_sdk_go//service/sesv2/sesv2iface",
        "@org_uber_go_zap//:zap",
    ],
)

go_binary(
    name = "task_trigger_offline_email",
    embed = [":task_trigger_offline_email_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

go_test(
    name = "task_trigger_offline_email_test",
    srcs = ["handler_test.go"],
    embed = [":task_trigger_offline_email_lib"],
    deps = [
        "//packages/common/mocks",
        "//packages/support/mocks",
        "//packages/support/pkg/offline_message_notification/constants",
        "//packages/support/pkg/offline_message_notification/input",
        "@com_github_aws_aws_sdk_go//service/sesv2",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//suite",
        "@org_uber_go_zap//zaptest",
    ],
)
