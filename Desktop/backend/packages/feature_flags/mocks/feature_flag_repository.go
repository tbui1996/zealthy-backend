// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	flagerror "github.com/circulohealth/sonar-backend/packages/feature_flags/pkg/data/flag_error"

	mock "github.com/stretchr/testify/mock"

	model "github.com/circulohealth/sonar-backend/packages/feature_flags/pkg/model"
)

// FeatureFlagRepository is an autogenerated mock type for the FeatureFlagRepository type
type FeatureFlagRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: flag
func (_m *FeatureFlagRepository) Delete(flag *model.FeatureFlag) *flagerror.FeatureFlagRepositoryError {
	ret := _m.Called(flag)

	var r0 *flagerror.FeatureFlagRepositoryError
	if rf, ok := ret.Get(0).(func(*model.FeatureFlag) *flagerror.FeatureFlagRepositoryError); ok {
		r0 = rf(flag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*flagerror.FeatureFlagRepositoryError)
		}
	}

	return r0
}

// Find provides a mock function with given fields: id
func (_m *FeatureFlagRepository) Find(id int) (*model.FeatureFlag, *flagerror.FeatureFlagRepositoryError) {
	ret := _m.Called(id)

	var r0 *model.FeatureFlag
	if rf, ok := ret.Get(0).(func(int) *model.FeatureFlag); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.FeatureFlag)
		}
	}

	var r1 *flagerror.FeatureFlagRepositoryError
	if rf, ok := ret.Get(1).(func(int) *flagerror.FeatureFlagRepositoryError); ok {
		r1 = rf(id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*flagerror.FeatureFlagRepositoryError)
		}
	}

	return r0, r1
}

// FindAll provides a mock function with given fields:
func (_m *FeatureFlagRepository) FindAll() (*[]model.FeatureFlag, *flagerror.FeatureFlagRepositoryError) {
	ret := _m.Called()

	var r0 *[]model.FeatureFlag
	if rf, ok := ret.Get(0).(func() *[]model.FeatureFlag); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]model.FeatureFlag)
		}
	}

	var r1 *flagerror.FeatureFlagRepositoryError
	if rf, ok := ret.Get(1).(func() *flagerror.FeatureFlagRepositoryError); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*flagerror.FeatureFlagRepositoryError)
		}
	}

	return r0, r1
}

// Save provides a mock function with given fields: flag
func (_m *FeatureFlagRepository) Save(flag *model.FeatureFlag) *flagerror.FeatureFlagRepositoryError {
	ret := _m.Called(flag)

	var r0 *flagerror.FeatureFlagRepositoryError
	if rf, ok := ret.Get(0).(func(*model.FeatureFlag) *flagerror.FeatureFlagRepositoryError); ok {
		r0 = rf(flag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*flagerror.FeatureFlagRepositoryError)
		}
	}

	return r0
}
