// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	appointmenterror "github.com/circulohealth/sonar-backend/packages/patient/pkg/data/appointment_error"

	mock "github.com/stretchr/testify/mock"

	model "github.com/circulohealth/sonar-backend/packages/patient/pkg/model"
)

// AgencyProviderRepository is an autogenerated mock type for the AgencyProviderRepository type
type AgencyProviderRepository struct {
	mock.Mock
}

// Find provides a mock function with given fields: agencyProviderId
func (_m *AgencyProviderRepository) Find(agencyProviderId string) (*model.AgencyProvider, *appointmenterror.AppointmentRepositoryError) {
	ret := _m.Called(agencyProviderId)

	var r0 *model.AgencyProvider
	if rf, ok := ret.Get(0).(func(string) *model.AgencyProvider); ok {
		r0 = rf(agencyProviderId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.AgencyProvider)
		}
	}

	var r1 *appointmenterror.AppointmentRepositoryError
	if rf, ok := ret.Get(1).(func(string) *appointmenterror.AppointmentRepositoryError); ok {
		r1 = rf(agencyProviderId)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*appointmenterror.AppointmentRepositoryError)
		}
	}

	return r0, r1
}

// FindAll provides a mock function with given fields:
func (_m *AgencyProviderRepository) FindAll() (*[]model.AgencyProvider, *appointmenterror.AppointmentRepositoryError) {
	ret := _m.Called()

	var r0 *[]model.AgencyProvider
	if rf, ok := ret.Get(0).(func() *[]model.AgencyProvider); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]model.AgencyProvider)
		}
	}

	var r1 *appointmenterror.AppointmentRepositoryError
	if rf, ok := ret.Get(1).(func() *appointmenterror.AppointmentRepositoryError); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*appointmenterror.AppointmentRepositoryError)
		}
	}

	return r0, r1
}

// Save provides a mock function with given fields: agencyProvider
func (_m *AgencyProviderRepository) Save(agencyProvider *model.AgencyProvider) *appointmenterror.AppointmentRepositoryError {
	ret := _m.Called(agencyProvider)

	var r0 *appointmenterror.AppointmentRepositoryError
	if rf, ok := ret.Get(0).(func(*model.AgencyProvider) *appointmenterror.AppointmentRepositoryError); ok {
		r0 = rf(agencyProvider)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*appointmenterror.AppointmentRepositoryError)
		}
	}

	return r0
}
