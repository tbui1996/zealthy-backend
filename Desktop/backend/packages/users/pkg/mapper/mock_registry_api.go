// Code generated by mockery 2.9.4. DO NOT EDIT.

package mapper

import (
	iface "github.com/circulohealth/sonar-backend/packages/users/pkg/mapper/iface"
	mock "github.com/stretchr/testify/mock"
)

// MockRegistryAPI is an autogenerated mock type for the RegistryAPI type
type MockRegistryAPI struct {
	mock.Mock
}

// ExternalUser provides a mock function with given fields:
func (_m *MockRegistryAPI) ExternalUser() iface.ExternalUser {
	ret := _m.Called()

	var r0 iface.ExternalUser
	if rf, ok := ret.Get(0).(func() iface.ExternalUser); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(iface.ExternalUser)
		}
	}

	return r0
}

// ExternalUserOrganization provides a mock function with given fields:
func (_m *MockRegistryAPI) ExternalUserOrganization() iface.ExternalUserOrganization {
	ret := _m.Called()

	var r0 iface.ExternalUserOrganization
	if rf, ok := ret.Get(0).(func() iface.ExternalUserOrganization); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(iface.ExternalUserOrganization)
		}
	}

	return r0
}

// externalUserCognito provides a mock function with given fields:
func (_m *MockRegistryAPI) externalUserCognito() externalUserCognitoAPI {
	ret := _m.Called()

	var r0 externalUserCognitoAPI
	if rf, ok := ret.Get(0).(func() externalUserCognitoAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(externalUserCognitoAPI)
		}
	}

	return r0
}

// externalUserSQL provides a mock function with given fields:
func (_m *MockRegistryAPI) externalUserSQL() externalUserSQLAPI {
	ret := _m.Called()

	var r0 externalUserSQLAPI
	if rf, ok := ret.Get(0).(func() externalUserSQLAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(externalUserSQLAPI)
		}
	}

	return r0
}
