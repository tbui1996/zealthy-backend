load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "mapper",
    srcs = [
        "external_user.go",
        "external_user_cognito.go",
        "external_user_organization.go",
        "external_user_sql.go",
        "iface_external_user_cognito.go",
        "iface_external_user_sql.go",
        "iface_registry.go",
        "mock_external_user_cognito_api.go",
        "mock_external_user_sqlapi.go",
        "mock_registry_api.go",
        "record_external_user_cognito.go",
        "record_external_user_organization.go",
        "record_external_user_sql.go",
        "registry.go",
    ],
    importpath = "github.com/circulohealth/sonar-backend/packages/users/pkg/mapper",
    visibility = ["//visibility:public"],
    deps = [
        "//packages/users/pkg/mapper/iface",
        "//packages/users/pkg/model",
        "@com_github_aws_aws_sdk_go//aws",
        "@com_github_aws_aws_sdk_go//service/cognitoidentityprovider",
        "@com_github_aws_aws_sdk_go//service/cognitoidentityprovider/cognitoidentityprovideriface",
        "@com_github_stretchr_testify//mock",
        "@io_gorm_gorm//:gorm",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "mapper_test",
    srcs = [
        "external_user_cognito_test.go",
        "external_user_organization_test.go",
        "external_user_sql_test.go",
        "external_user_test.go",
        "registry_test.go",
    ],
    embed = [":mapper"],
    deps = [
        "//packages/common/mocks",
        "//packages/users/pkg/mapper/iface",
        "//packages/users/pkg/model",
        "@com_github_aws_aws_sdk_go//aws",
        "@com_github_aws_aws_sdk_go//service/cognitoidentityprovider",
        "@com_github_data_dog_go_sqlmock//:go-sqlmock",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//suite",
        "@io_gorm_driver_postgres//:postgres",
        "@io_gorm_gorm//:gorm",
        "@org_uber_go_zap//zaptest",
    ],
)
