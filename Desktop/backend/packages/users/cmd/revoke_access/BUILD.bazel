load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "revoke_access_lib",
    srcs = [
        "connector.go",
        "handler.go",
        "helpers.go",
    ],
    importpath = "github.com/circulohealth/sonar-backend/packages/users/cmd/revoke_access",
    visibility = ["//visibility:private"],
    deps = [
        "//packages/common/dynamo",
        "//packages/common/exception",
        "//packages/common/logging",
        "//packages/common/requestConfig",
        "//packages/users/pkg/idp",
        "//packages/users/pkg/idp/iface",
        "//packages/users/pkg/request",
        "@com_github_aws_aws_lambda_go//events",
        "@com_github_aws_aws_lambda_go//lambda",
        "@com_github_aws_aws_sdk_go//aws",
        "@com_github_aws_aws_sdk_go//service/apigatewaymanagementapi",
        "@com_github_aws_aws_sdk_go//service/apigatewaymanagementapi/apigatewaymanagementapiiface",
        "@com_github_aws_aws_sdk_go//service/cognitoidentityprovider",
        "@com_github_aws_aws_sdk_go//service/dynamodb",
        "@org_uber_go_zap//:zap",
    ],
)

go_binary(
    name = "revoke_access",
    embed = [":revoke_access_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

go_test(
    name = "revoke_access_test",
    srcs = [
        "handler_test.go",
        "helpers_test.go",
    ],
    embed = [":revoke_access_lib"],
    deps = [
        "//packages/common/dynamo",
        "//packages/common/exception",
        "//packages/common/mocks",
        "//packages/users/pkg/idp/mocks",
        "//packages/users/pkg/request",
        "@com_github_aws_aws_sdk_go//service/apigatewaymanagementapi",
        "@com_github_aws_aws_sdk_go//service/cognitoidentityprovider",
        "@com_github_aws_aws_sdk_go//service/dynamodb",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//suite",
        "@org_uber_go_zap//zaptest",
    ],
)
