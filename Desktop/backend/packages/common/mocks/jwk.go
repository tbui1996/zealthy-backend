// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	jwk "github.com/lestrrat-go/jwx/jwk"

	mock "github.com/stretchr/testify/mock"
)

// Jwk is an autogenerated mock type for the Jwk type
type Jwk struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: ctx, urlstring, options
func (_m *Jwk) Fetch(ctx context.Context, urlstring string, options ...jwk.FetchOption) (jwk.Set, error) {
	_va := make([]interface{}, len(options))
	for _i := range options {
		_va[_i] = options[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, urlstring)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 jwk.Set
	if rf, ok := ret.Get(0).(func(context.Context, string, ...jwk.FetchOption) jwk.Set); ok {
		r0 = rf(ctx, urlstring, options...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(jwk.Set)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, ...jwk.FetchOption) error); ok {
		r1 = rf(ctx, urlstring, options...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
