// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	apigatewaymanagementapi "github.com/aws/aws-sdk-go/service/apigatewaymanagementapi"

	context "context"

	mock "github.com/stretchr/testify/mock"

	request "github.com/aws/aws-sdk-go/aws/request"
)

// ApiGatewayManagementApiAPI is an autogenerated mock type for the ApiGatewayManagementApiAPI type
type ApiGatewayManagementApiAPI struct {
	mock.Mock
}

// DeleteConnection provides a mock function with given fields: _a0
func (_m *ApiGatewayManagementApiAPI) DeleteConnection(_a0 *apigatewaymanagementapi.DeleteConnectionInput) (*apigatewaymanagementapi.DeleteConnectionOutput, error) {
	ret := _m.Called(_a0)

	var r0 *apigatewaymanagementapi.DeleteConnectionOutput
	if rf, ok := ret.Get(0).(func(*apigatewaymanagementapi.DeleteConnectionInput) *apigatewaymanagementapi.DeleteConnectionOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apigatewaymanagementapi.DeleteConnectionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*apigatewaymanagementapi.DeleteConnectionInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConnectionRequest provides a mock function with given fields: _a0
func (_m *ApiGatewayManagementApiAPI) DeleteConnectionRequest(_a0 *apigatewaymanagementapi.DeleteConnectionInput) (*request.Request, *apigatewaymanagementapi.DeleteConnectionOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*apigatewaymanagementapi.DeleteConnectionInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *apigatewaymanagementapi.DeleteConnectionOutput
	if rf, ok := ret.Get(1).(func(*apigatewaymanagementapi.DeleteConnectionInput) *apigatewaymanagementapi.DeleteConnectionOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apigatewaymanagementapi.DeleteConnectionOutput)
		}
	}

	return r0, r1
}

// DeleteConnectionWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *ApiGatewayManagementApiAPI) DeleteConnectionWithContext(_a0 context.Context, _a1 *apigatewaymanagementapi.DeleteConnectionInput, _a2 ...request.Option) (*apigatewaymanagementapi.DeleteConnectionOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *apigatewaymanagementapi.DeleteConnectionOutput
	if rf, ok := ret.Get(0).(func(context.Context, *apigatewaymanagementapi.DeleteConnectionInput, ...request.Option) *apigatewaymanagementapi.DeleteConnectionOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apigatewaymanagementapi.DeleteConnectionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *apigatewaymanagementapi.DeleteConnectionInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConnection provides a mock function with given fields: _a0
func (_m *ApiGatewayManagementApiAPI) GetConnection(_a0 *apigatewaymanagementapi.GetConnectionInput) (*apigatewaymanagementapi.GetConnectionOutput, error) {
	ret := _m.Called(_a0)

	var r0 *apigatewaymanagementapi.GetConnectionOutput
	if rf, ok := ret.Get(0).(func(*apigatewaymanagementapi.GetConnectionInput) *apigatewaymanagementapi.GetConnectionOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apigatewaymanagementapi.GetConnectionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*apigatewaymanagementapi.GetConnectionInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConnectionRequest provides a mock function with given fields: _a0
func (_m *ApiGatewayManagementApiAPI) GetConnectionRequest(_a0 *apigatewaymanagementapi.GetConnectionInput) (*request.Request, *apigatewaymanagementapi.GetConnectionOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*apigatewaymanagementapi.GetConnectionInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *apigatewaymanagementapi.GetConnectionOutput
	if rf, ok := ret.Get(1).(func(*apigatewaymanagementapi.GetConnectionInput) *apigatewaymanagementapi.GetConnectionOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apigatewaymanagementapi.GetConnectionOutput)
		}
	}

	return r0, r1
}

// GetConnectionWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *ApiGatewayManagementApiAPI) GetConnectionWithContext(_a0 context.Context, _a1 *apigatewaymanagementapi.GetConnectionInput, _a2 ...request.Option) (*apigatewaymanagementapi.GetConnectionOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *apigatewaymanagementapi.GetConnectionOutput
	if rf, ok := ret.Get(0).(func(context.Context, *apigatewaymanagementapi.GetConnectionInput, ...request.Option) *apigatewaymanagementapi.GetConnectionOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apigatewaymanagementapi.GetConnectionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *apigatewaymanagementapi.GetConnectionInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostToConnection provides a mock function with given fields: _a0
func (_m *ApiGatewayManagementApiAPI) PostToConnection(_a0 *apigatewaymanagementapi.PostToConnectionInput) (*apigatewaymanagementapi.PostToConnectionOutput, error) {
	ret := _m.Called(_a0)

	var r0 *apigatewaymanagementapi.PostToConnectionOutput
	if rf, ok := ret.Get(0).(func(*apigatewaymanagementapi.PostToConnectionInput) *apigatewaymanagementapi.PostToConnectionOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apigatewaymanagementapi.PostToConnectionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*apigatewaymanagementapi.PostToConnectionInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostToConnectionRequest provides a mock function with given fields: _a0
func (_m *ApiGatewayManagementApiAPI) PostToConnectionRequest(_a0 *apigatewaymanagementapi.PostToConnectionInput) (*request.Request, *apigatewaymanagementapi.PostToConnectionOutput) {
	ret := _m.Called(_a0)

	var r0 *request.Request
	if rf, ok := ret.Get(0).(func(*apigatewaymanagementapi.PostToConnectionInput) *request.Request); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*request.Request)
		}
	}

	var r1 *apigatewaymanagementapi.PostToConnectionOutput
	if rf, ok := ret.Get(1).(func(*apigatewaymanagementapi.PostToConnectionInput) *apigatewaymanagementapi.PostToConnectionOutput); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*apigatewaymanagementapi.PostToConnectionOutput)
		}
	}

	return r0, r1
}

// PostToConnectionWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *ApiGatewayManagementApiAPI) PostToConnectionWithContext(_a0 context.Context, _a1 *apigatewaymanagementapi.PostToConnectionInput, _a2 ...request.Option) (*apigatewaymanagementapi.PostToConnectionOutput, error) {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *apigatewaymanagementapi.PostToConnectionOutput
	if rf, ok := ret.Get(0).(func(context.Context, *apigatewaymanagementapi.PostToConnectionInput, ...request.Option) *apigatewaymanagementapi.PostToConnectionOutput); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apigatewaymanagementapi.PostToConnectionOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *apigatewaymanagementapi.PostToConnectionInput, ...request.Option) error); ok {
		r1 = rf(_a0, _a1, _a2...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
